from struct import pack
from scapy.packet import Packet
from scapy.fields import XShortField
from scapy.all import bind_layers

class GOOSE(Packet):
    name = "GOOSE"
    fields_desc = [
        XShortField("appid", 0),
        XShortField("length", 8),
        XShortField("reserved1", 0),
        XShortField("reserved2", 0),
    ]

    def post_build(self, packet, payload):
        # Calculate the length of the GOOSE PDU (payload)
        goose_pdu_length = len(packet) + len(payload)
        # Update the length field in the GOOSE header
        packet = packet[:2] + pack('!H', goose_pdu_length) + packet[4:]
        return packet + payload

# Example usage:
# Create an instance of the GOOSE packet
goose_packet = GOOSE(appid=1234, length=8, reserved1=0, reserved2=0)

# Change the length field to a new value (e.g., 20)
goose_packet.length = 20

# Now the length field has been updated, and you can use the packet as needed
print(goose_packet.show())

# Output the updated packet length
print(f"Updated Length: {goose_packet.length}")
