from scapy.all import *
from gooseFunc import *

# Create an Ethernet packet with a VLAN layer and initial payload
eth = Ether(dst="00:11:22:33:44:55", src="66:77:88:99:AA:BB") / Dot1Q(vlan=100) / "initial payload"

# Display the original packet
print("Original packet:")
eth.show()

# Convert the packet to hexadecimal
hex_data = bytes(eth).hex()
print(f"\nHexadecimal representation: {hex_data}")

# Increase the frame length by adding extra payload
# Example: Adding 100 bytes of 'A' (0x41) to the payload
extra_payload = '41' * 100
modified_hex_data = hex_data + extra_payload

print(f"\nModified Hexadecimal representation with increased length: {modified_hex_data}")

# Convert back to bytes
modified_bytes = bytes.fromhex(modified_hex_data)

# Rebuild the packet
modified_packet = Ether(modified_bytes)

# Display the modified packet
print("\nModified packet with increased length:")
modified_packet.show()
