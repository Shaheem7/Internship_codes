# Auto-generated by asn1ate v.0.6.0 from sv.asn1
# (last modified on 2024-07-19 12:31:36.284126) 

# IEC61850
from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful


class Data(univ.OctetString):
    pass


class UtcTime(univ.OctetString):
    pass


class GmidData(univ.OctetString):
    pass


class ASDU(univ.Sequence):
    pass


ASDU.componentType = namedtype.NamedTypes(
    namedtype.NamedType('svID', char.VisibleString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.OptionalNamedType('datSet', char.VisibleString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('smpCnt', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('confRev', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 429496729)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('refrTm', UtcTime().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('smpSynch', univ.Integer(namedValues=namedval.NamedValues(('none', 0), ('local', 1), ('global', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('smpRate', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.NamedType('seqData', Data().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),        
    namedtype.OptionalNamedType('smpMod', univ.Integer(namedValues=namedval.NamedValues(('samplesPerNormalPeriod', 0), ('samplesPerSecond', 1), ('secondsPerSample', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),     
    namedtype.OptionalNamedType('gmidData', GmidData().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 
9)))
)


class SavPdu(univ.Sequence):
    pass


SavPdu.componentType = namedtype.NamedTypes(
    namedtype.NamedType('noASDU', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('seqASDU', univ.SequenceOf(componentType=ASDU()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class SampledValues(univ.Choice):
    pass


SampledValues.componentType = namedtype.NamedTypes(
    namedtype.NamedType('savPdu', SavPdu().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 0)))
)
