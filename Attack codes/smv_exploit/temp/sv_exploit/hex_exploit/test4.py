from scapy.all import rdpcap, wrpcap, raw, Ether, hexdump

# Read the packet from a pcap file
path = "source.pcapng"
packets = rdpcap(path)
pkt = packets[0]

# Display the original packet
print("Original Packet:")
pkt.show()

# Convert packet to bytes
bytes_data = raw(pkt)
print("\nOriginal Bytes:")
hexdump(pkt)

# Convert to bytearray for mutability
byte_array = bytearray(bytes_data)

print(f"\nByte Array: {byte_array} ")
#  Modify some bytes (example: change bytes at positions 2 and 3)

# change the value of svID to 0x4002
byte_array[34:36] = b'\x40\x02'


# change the value of smpCnt to 0x1234
byte_array[51:53] = b'\x12\x34'

# change the value of confRev to 0x5678
# byte_array[53:55] = b'\x56\x78'


print(f"\nByte Array: {byte_array} ")

# Convert back to bytes
modified_bytes_data = bytes(byte_array)

# Reconstruct the packet from modified bytes
modified_pkt = Ether(modified_bytes_data)

# Display the modified packet
print("\nModified Packet:")
modified_pkt.show()

# Display the modified bytes
print("\nModified Bytes:")
hexdump(modified_pkt)

# (Optional) Save the modified packet back to a pcap file
wrpcap("test4.pcapng", [modified_pkt])
